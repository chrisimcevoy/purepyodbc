networks:
  default:
    name: purepyodbc

x-common-setup: &common-setup
  depends_on:
    mysql:
      condition: service_healthy
    postgresql:
      condition: service_healthy
    sqlserver:
      condition: service_healthy
  environment:
    # These are used in conftest.py so that tests target the
    # db services defined in this file.
    MYSQL_HOST: mysql
    POSTGRESQL_HOST: postgresql
    SQL_SERVER_HOST: sqlserver

services:
  pypy:
    build:
      context: .
      args:
        UV_PYTHON: pypy3.9
    <<: *common-setup

  pypy-latest:
    build:
      context: .
      args:
        UV_PYTHON: pypy3.11
    <<: *common-setup

  cpython:
    build:
      context: .
      args:
        UV_PYTHON: python3.9
    <<: *common-setup

  cpython-latest:
    build:
      context: .
      args:
        UV_PYTHON: python3.14
    <<: *common-setup

  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: super-secret-password
      MYSQL_USER: sa
      MYSQL_PASSWORD: Password123
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-psuper-secret-password"]
      interval: 5s
      timeout: 5s
      retries: 10

  postgresql:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: Password123
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "sa"]
      interval: 5s
      timeout: 5s
      retries: 10

  sqlserver:
    image: mcr.microsoft.com/mssql/server
    container_name: sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Password123
    ports:
      - "1433:1433"
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P "$$SA_PASSWORD" -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
