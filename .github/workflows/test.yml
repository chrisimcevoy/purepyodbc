name: test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.4

      - name: Install dependencies
        run: poetry install

      - name: Run pre-commit hooks
        run: poetry run pre-commit run -a

  pytest:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-22.04", "windows-latest"]
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "pypy-3.9"
          - "pypy-3.10"
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    # Begin Ubuntu steps
    - name: Install ODBC Drivers
      if: matrix.os == 'ubuntu-22.04'
      run: |
        sudo apt install unixodbc freetds-bin freetds-dev tdsodbc odbc-postgresql
        
        odbcinst -j
        
        cat /etc/odbcinst.ini
        
        sudo odbcinst -i -d -f driver_templates/tds.driver.template
        
        cat /etc/odbcinst.ini
        
        sudo odbcinst -i -d -f driver_templates/pgsql.driver.template
        
        cat /etc/odbcinst.ini
        
        curl -L -o mysql-connector-odbc.deb https://dev.mysql.com/get/Downloads/Connector-ODBC/9.1/mysql-connector-odbc_9.1.0-1debian12_amd64.deb
        sudo dpkg -i mysql-connector-odbc.deb
        rm mysql-connector-odbc.deb
        
        cat /etc/odbcinst.ini
    - name: Build the docker-compose stack
      if: matrix.os == 'ubuntu-22.04'
      run: docker compose up -d sqlserver postgresql mysql
    - name: Check running containers
      if: matrix.os == 'ubuntu-22.04'
      run: docker ps -a
    - name: Check logs
      if: matrix.os == 'ubuntu-22.04'
      run: docker logs sqlserver
    # End Ubuntu steps

    # Begin Windows/macOS steps
    - name: Install SQL Server (Windows & macOS)
      if: matrix.os != 'ubuntu-22.04'
      uses: potatoqualitee/mssqlsuite@v1.8
      with:
        install: sqlengine
        version: 2019
        sa-password: Password123
        show-log: true
        #collation: Latin1_General_BIN
    - name: Install PostgreSQL (Windows & macOS)
      if: matrix.os != 'ubuntu-22.04'
      uses: ikalnytskyi/action-setup-postgres@v7
      with:
        username: sa
        password: Password123
        database: sa
        #port: "34837"
    # End Windows/macOS steps

    # Begin Windows steps
    - name: Install PosgreSQL Driver (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install --verbose psqlodbc
    # End Windows steps

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.8.4

    - name: Install dependencies with Poetry
      run: poetry install

    - name: Run tests
      run: poetry run pytest -v
