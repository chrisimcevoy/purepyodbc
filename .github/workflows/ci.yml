name: Continuous Integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  ubuntu-tests:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11-dev", "pypy-3.7", "pypy-3.8", "pypy-3.9"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Install OS dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt install unixodbc freetds-bin freetds-dev tdsodbc odbc-postgresql
        odbcinst -j
        cat /etc/odbcinst.ini
        sudo odbcinst -i -d -f driver_templates/tds.driver.template
        cat /etc/odbcinst.ini
        sudo odbcinst -i -d -f driver_templates/pgsql.driver.template
        cat /etc/odbcinst.ini
    - name: Build the docker-compose stack
      run: docker-compose up -d
    - name: Check running containers
      run: docker ps -a
    - name: Check logs
      run: docker logs sqlserver
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python dependencies
      run: |
        pip install -U pip
        pip install -Ur requirements.txt
    - name: Test with pytest
      run: |
        python -m pytest
