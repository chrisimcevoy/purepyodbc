name: Continuous Integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  purepyodbc-ci:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11-dev", "pypy-3.7", "pypy-3.8", "pypy-3.9"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2

    # Begin Ubuntu steps
    - name: Install ODBC Drivers
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt install unixodbc freetds-bin freetds-dev tdsodbc odbc-postgresql
        odbcinst -j
        cat /etc/odbcinst.ini
        sudo odbcinst -i -d -f driver_templates/tds.driver.template
        cat /etc/odbcinst.ini
        sudo odbcinst -i -d -f driver_templates/pgsql.driver.template
        cat /etc/odbcinst.ini
    - name: Build the docker-compose stack
      if: matrix.os == 'ubuntu-latest'
      run: docker-compose up -d
    - name: Check running containers
      if: matrix.os == 'ubuntu-latest'
      run: docker ps -a
    - name: Check logs
      if: matrix.os == 'ubuntu-latest'
      run: docker logs sqlserver
    # End Ubuntu steps

    # Begin Windows/macOS steps
    - name: Install SQL Server (Windows & macOS)
      if: matrix.os != 'ubuntu-latest'
      uses: potatoqualitee/mssqlsuite@v1.5.1
      with:
        install: sqlengine
        version: 2019
        sa-password: Password123
        show-log: true
        #collation: Latin1_General_BIN
    - name: Install PostgreSQL (Windows & macOS)
      if: matrix.os != 'ubuntu-latest'
      uses: ikalnytskyi/action-setup-postgres@v2
      with:
        username: sa
        password: Password123
        database: sa
        #port: "34837"
    # End Windows/macOS steps

    # Begin Windows steps
    - name: Install PosgreSQL Driver (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install --verbose psqlodbc
    # End Windows steps

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python dependencies
      run: |
        pip install -U pip
        pip install -Ur requirements.txt
    - name: Test with pytest
      run: pytest
